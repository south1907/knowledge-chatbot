<?php

namespace App\Helpers\Zalo;

abstract class ZaloAES
{
	protected static $_key;
	protected static $_prevBlock = null;
	protected static $_iv = [0, 0, 0, 0];
	protected static $_keySchedule = [];
	protected static $_invKeySchedule = [];

	public static function parseKey ($e) {
	    $t = strlen($e);
	    $r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	    $a = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null, 62,null,null,null, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,null,null,null, 64,null,null,null, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,null,null,null,null,null,null, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51];

	    $o = substr($r, 64, 1);
	    if ($o) {
	        $s = strpos($e, $o);

	        if ($s != 0) {
	        	$t = $s;
	        }
	    }

	    return self::subParseKey($e, $t, $a);
	}

	public static function subParseKey($e, $t, $r) {

	    for ($a = [], $i = 0, $o = 0; $o < $t; $o++) {
	    	if ($o % 4) {
	            $s = $r[ord($e[$o - 1])] << $o % 4 * 2;
	            $l = $r[ord($e[$o])] >> 6 - $o % 4 * 2;
	            
	            if (!isset($a[$i >> 2])) {
	            	$a[$i >> 2] = null;
	            }
	            $a[$i >> 2] |= self::intval32bits(($s | $l) << 24 - $i % 4 * 8);
	            $i++;

	        } 
	    }
	    return [
	    	'words'	=> $a,
	    	'sigBytes'	=> $i
	    ];
	}

	public static function setKeySchedule ($e) {
	    $a = [99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];
	    $p = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];

	    $c = [1374988112,2118214995,437757123,975658646,1001089995,530400753,-1392879445,1273168787,540080725,-1384747530,-1999866223,-184398811,1340463100,-987051049,641025152,-1251826801,-558802359,632953703,1172967064,1576976609,-1020300030,-2125664238,-1924753501,1809054150,59727847,361929877,-1083344149,-1789765158,-725712083,1484005843,1239443753,-1899378620,1975683434,-191989384,-1722270101,666464733,-1092530250,-259478249,-920605594,2110667444,1675577880,-451268222,-1756286112,1649639237,-1318815776,-1150570876,-25059300,-116905068,1883793496,-1891238631,-1797362553,1383856311,-1418472669,1917518562,-484470953,1716890410,-1293211641,800440835,-2033878118,-751368027,807962610,599762354,33778362,-317291940,-1966138325,-1485196142,-217582864,1315562145,1708848333,101039829,-785096161,-995688822,875451293,-1561111136,92987698,-1527321739,193195065,1080094634,1584504582,-1116860335,1042385657,-1763899843,-583137874,1306967366,-1856729675,1908694277,67556463,1615861247,429456164,-692196969,-1992277044,1742315127,-1326955843,126454664,-417768648,2043211483,-1585706425,2084704233,-125559095,0,159417987,841739592,504459436,1817866830,-49348613,260388950,1034867998,908933415,168810852,1750902305,-1688513327,607530554,202008497,-1822955761,-1259432238,463180190,-2134850225,1641816226,1517767529,470948374,-493635062,-1063245083,1008918595,303765277,235474187,-225720403,766945465,337553864,1475418501,-1351284916,-291906117,-1551933187,-150919521,1551037884,1147550661,1543208500,-1958532746,-886847780,-1225917336,-1192955549,-684598070,1113818384,328671808,-2067394272,-2058738563,-759480840,-1359400431,-953573011,496906059,-592301837,226906860,2009195472,733156972,-1452230247,294930682,1206477858,-1459843900,-1594867942,1451044056,573804783,-2025238841,-650587711,-1932877058,-1730933962,-1493859889,-1518674392,-625504730,1068351396,742039012,1350078989,1784663195,1417561698,-158526526,-1864845080,775550814,-2101104651,-1621262146,1775276924,1876241833,-819653965,-928212677,270040487,-392404114,-616842373,-853116919,1851332852,-325404927,-2091935064,-426414491,-1426069890,566021896,-283776794,-1159226407,1248802510,-358676012,699432150,832877231,708780849,-962227152,899835584,1951317047,-58537306,-527380304,866637845,-251357110,1106041591,2144161806,395441711,1984812685,1139781709,-861254316,-459930401,-1630423581,1282050075,-1054072904,1181045119,-1654724092,25965917,-91786125,-83148498,-1285087910,-1831087534,-384805325,1842759443,-1697160820,933301370,1509430414,-351060855,-827774994,-1218328267,-518199827,2051518780,-1663901863,1441952575,404016761,1942435775,1408749034,1610459739,-549621996,2017778566,-894438527,-1184316354,941896748,-1029488545,371049330,-1126030068,675039627,-15887039,967311729,135050206,-659233636,1683407248,2076935265,-718096784,1215061108,-793225406];
	    $d = [1347548327,1400783205,-1021700188,-1774573730,-885281941,-249586363,-1414727080,-1823743229,1428173050,-156404115,-1853305738,636813900,-61872681,-674944309,-2144979644,-1883938141,1239331162,1730525723,-1740248562,-513933632,46346101,310463728,-1551022441,-966011911,-419197089,-1793748324,-339776134,-627748263,768917123,-749177823,692707433,1150208456,1786102409,2029293177,1805211710,-584599183,-1229004465,401639597,1724457132,-1266823622,409198410,-2098914767,1620529459,1164071807,-525245321,-2068091986,486441376,-1795618773,1483753576,428819965,-2020286868,-1219331080,598438867,-495826174,1474502543,711349675,129166120,53458370,-1702443653,-1512884472,-231724921,-1306280027,-1174273174,1559041666,730517276,-1834518092,-252508174,-1588696606,-848962828,-721025602,533804130,-1966823682,-1657524653,-1599933611,839224033,1973745387,957055980,-1438621457,106852767,1371368976,-113368694,1033297158,-1361232379,1179510461,-1248766835,91341917,1862534868,-10465259,605657339,-1747534359,-863420349,2003294622,-1112479678,-2012771957,954669403,-612775698,1201765386,-377732593,-906460130,0,-2096529274,1211247597,-1407315600,1315723890,-67301633,1443857720,507358933,657861945,1678381017,560487590,-778347692,975451694,-1324610969,261314535,-759894378,-1642357871,1333838021,-1570644960,1767536459,370938394,182621114,-440360918,1128014560,487725847,185469197,-1376613433,-1188186456,-938205527,-2057834215,1286567175,-1141990947,-39616672,-1611202266,-1134791947,-985373125,878443390,1988838185,-590666810,1756818940,1673061617,-891866660,272786309,1075025698,545572369,2105887268,-120407235,296679730,1841768865,1260232239,-203640272,-334657966,-797457949,1814803222,-1716948807,-99511224,575138148,-995558260,446754879,-665420500,-282971248,-947435186,-1042728751,-24327518,915985419,-811141759,681933534,651868046,-1539330625,-466863459,223377554,-1687527476,1649704518,-1024029421,-393160520,1580087799,-175979601,-1096852096,2087309459,-1452288723,-1278270190,1003007129,-1492117379,1860738147,2077965243,164439672,-194094824,32283319,-1467789414,1709610350,2125135846,136428751,-420538904,-642062437,-833982666,-722821367,-701910916,-1355701070,824852259,818324884,-1070226842,930369212,-1493400886,-1327460144,355706840,1257309336,-146674470,243256656,790073846,-1921626666,1296297904,1422699085,-538667516,-476130891,457992840,-1195299809,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,-1936009375,2050466060,-1906706412,-1981082820,-288446169,901210569,-304014107,1014646705,1503449823,1062597235,2031621326,-1082931401,-363595827,1533017514,350174575,-2038938405,-2117423117,1052338372,741876788,1606591296,1914052035,213705253,-1960297399,1107234197,1899603969,-569897805,-1663519516,-1872472383,1635502980,1893020342,1950903388,1120974935];
	    $f = [-1487908364,1699970625,-1530717673,1586903591,1808481195,1173430173,1487645946,59984867,-95084496,1844882806,1989249228,1277555970,-671330331,-875051734,1149249077,-1550863006,1514790577,459744698,244860394,-1058972162,1963115311,-267222708,-1750889146,-104436781,1608975247,-1667951214,2062270317,1507497298,-2094148418,567498868,1764313568,-935031095,-1989511742,2037970062,1047239000,1910319033,1337376481,-1390940024,-1402549984,984907214,1243112415,830661914,861968209,2135253587,2011214180,-1367032981,-1608712575,731183368,1750626376,-48656571,1820824798,-122203525,-752637069,48394827,-1890065633,-1423284651,671593195,-1039978571,2073724613,145085239,-2014171096,-1515052097,1790575107,-2107839210,472615631,-1265457287,-219090169,-492745111,-187865638,-1093335547,1646252340,-24460122,1402811438,1436590835,-516815478,-344611594,-331805821,-274055072,-1626972559,273792366,-1963377119,104699613,95345982,-1119466010,-1917480620,1560637892,-730921978,369057872,-81520232,-375925059,1137477952,-1636341799,1119727848,-1954019447,1530455833,-287606328,172466556,266959938,516552836,0,-2038232704,-314035669,1890328081,1917742170,-262898,945164165,-719438418,958871085,-647755249,-1507760036,1423022939,775562294,1739656202,-418409641,-1764576018,-1851909221,-984645440,547512796,1265195639,437656594,-1173691757,719700128,-532464606,387781147,218828297,-944901493,-1464259146,-1446505442,428169201,122466165,-574886247,1627235199,648017665,-172204942,1002783846,2117360635,695634755,-958608605,-60246291,-245122844,-590686415,-2062531997,574624663,287343814,612205898,1039717051,840019705,-1586641111,793451934,821288114,1391201670,-472877119,376187827,-1181111952,1224348052,1679968233,-1933268740,1058709744,752375421,-1863376333,1321699145,-775825096,-1560376118,188127444,-2117097739,-567761542,-1910056265,-1079754835,-1645990854,-1844621192,-862229921,1180849278,331544205,-1192718120,-144822727,-1342864701,-2134991011,-1820562992,766078933,313773861,-1724135252,2108100632,1668212892,-1149510853,2013908262,418672217,-1224610662,-1700232369,1852171925,-427906305,-821550660,-387518699,-1680229657,919489135,164948639,2094410160,-1297141340,590424639,-1808742747,1723872674,-1137216434,-895026046,-793714544,-669699161,-1739919100,-621329940,1343127501,-164685935,-695372211,-1337113617,1297403050,81781910,-1243373871,-2011476886,532201772,1367295589,-368796322,895287692,1953757831,1093597963,492483431,-766340389,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,-919226527,-437395172,-1321436601,-547775278,1933530610,-830924780,935293895,-840281097,-1436852227,1863638845,-611944380,-209597777,-1002522264,875313188,1080017571,-1015933411,621591778,1233856572,-1790836979,24197544,-1277294580,-459482956,-1047501738,-2073986101,-1234119374,1551124588,1463996600];
	    $h = [-190361519,1097159550,396673818,660510266,-1418998981,-1656360673,-94852180,-486304949,821712160,1986918061,-864644728,38544885,-438830001,718002117,893681702,1654886325,-1319482914,-1172609243,-368142267,-20913827,796197571,1290801793,1184342925,-738605461,-1889540349,-1835231979,1836772287,1381620373,-1098699308,1948373848,-529979063,-909622130,-1031181707,-1904641804,1480485785,-1183720153,-514869570,-2001922064,548169417,-835013507,-548792221,439452389,1362321559,1400849762,1685577905,1806599355,-2120213250,137073913,1214797936,1174215055,-563312748,2079897426,1943217067,1258480242,529487843,1437280870,-349698126,-1245576401,-981755258,923313619,679998000,-1079659997,57326082,377642221,-820237430,2041877159,133361907,1776460110,-621490843,96392454,878845905,-1493267772,777231668,-212492126,-1964953083,-152341084,-2081670901,1626319424,1906247262,1846563261,562755902,-586793578,1040559837,-423803315,1418573201,-1000536719,114585348,1343618912,-1728371687,-1108764714,1078185097,-643926169,-398279248,-1987344377,425408743,-923870343,2081048481,1108339068,-2078357000,0,-2138668279,736970802,292596766,1517440620,251657213,-2059905521,-1361764803,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,-292105548,-1684955621,-1060810880,-601841055,2001430874,303699484,-1816524062,-1607801408,585122620,454499602,151849742,-1949848078,-1230456531,514443284,-249985705,1963412655,-1713521682,2137062819,19308535,1928707164,1715193156,-75615141,1126790795,600235211,-302225226,-453942344,836553431,1669664834,-1759363053,-971956092,1243905413,-1153566510,-114159186,698445255,-1641067747,-1305414692,-2041385971,-1042034569,-1290376149,1891211689,-1807156719,-379313593,-57883480,-264299872,2100090966,865136418,1229899655,953270745,-895287668,-737462632,-176042074,2061379749,-1215420710,-1379949505,983426092,2022837584,1607244650,2118541908,-1928084746,-658970480,972512814,-1011878526,1568718495,-795640727,-718427793,621982671,-1399243832,410887952,-1671205144,1002142683,645401037,1494807662,-1699282452,1335535747,-1787927066,-1671510,-1127282655,367585007,-409216582,1865862730,-1626745622,-1333995991,-1531793615,1059270954,-1517014842,-1570324427,1320957812,-2100648196,-1865371424,-1479011021,77089521,-321194175,-850391425,-1846137065,1305906550,-273658557,-1437772596,-1778065436,-776608866,1787304780,740276417,1699839814,1592394909,-1942659839,-2022411270,188821243,1729977011,-606973294,274084841,-699985043,-681472870,-1593017801,-132870567,322734571,-1457000754,1640576439,484830689,1202797690,-757114468,-227328171,349075736,-952647821,-137500077,-39167137,1030690015,1155237496,-1342996022,1757691577,607398968,-1556062270,499347990,-500888388,1011452712,227885567,-1476300487,213114376,-1260086056,1455525988,-880516741,850817237,1817998408,-1202240816];

	    $t = $e['words'];
	    $n = $e['sigBytes'] / 4;
	    $_nRounds = $n + 6;
	    $r = 4 * ($_nRounds + 1);
	    $i = [];

	    for ($o = 0; $o < $r; $o++) {
	    	if ($o < $n) $i[$o] = $t[$o];
	    	else {
	    	    $s = $i[$o - 1];
	    	    if ($o % $n) {
	    	    	if ($n > 6 && $o % $n == 4) {
	    	    	 	$s = self::intval32bits($a[self::zerofill($s, 24)] << 24) | self::intval32bits($a[self::zerofill($s, 16) & 255] << 16) | self::intval32bits($a[self::zerofill($s, 8) & 255] << 8) | $a[255 & $s];
	    	    	}
	    	    } else {
	    	    	$s = self::intval32bits($s << 8) | self::zerofill($s, 24);
	    	    	$s = self::intval32bits($a[self::zerofill($s, 24)] << 24) | self::intval32bits($a[self::zerofill($s, 16) & 255] << 16) | self::intval32bits($a[self::zerofill($s, 8) & 255] << 8) | $a[255 & $s];
	    	    	$s ^= self::intval32bits($p[$o / $n | 0] << 24);
	    	    }
	    	    if (!isset($i[$o - $n])) {
	            	$i[$o - $n] = null;
	            }
	    	    $i[$o] = self::intval32bits($i[$o - $n] ^ $s);
	    	}
	    }
	    for ($l = [], $u = 0; $u < $r; $u++) {
	        $o = $r - $u;
	        if ($u % 4) $s = $i[$o];
	        else $s = $i[$o - 4];
	        $l[$u] = $u < 4 || $o <= 4 ? $s : $c[$a[self::zerofill($s, 24)]] ^ $d[$a[self::zerofill($s, 16) & 255]] ^ $f[$a[self::zerofill($s, 8) & 255]] ^ $h[$a[255 & $s]];
	    }
	    self::$_keySchedule = $i;
	    self::$_invKeySchedule = $l;

	}

	public static function parse($e) {
	    for ($t = strlen($e), $n = [], $r = 0; $r < $t; $r++) {

	    	if(!isset($n[self::zerofill($r, 2)])) {
	    		$n[self::zerofill($r, 2)] = null;
	    	}
	    	
	    	$n[self::zerofill($r, 2)] |= self::intval32bits((255 & ord($e[$r])) << (24 - $r % 4 * 8));
	    }

	    return [
	    	'words'	=> $n,
	        'sigBytes'	=> $t
	    ];
	}

	abstract static function doFinalize($e);

	public static function pad($e, $t) {
		for ($n = 4 * $t, $r = $n - $e['sigBytes'] % $n, $a = self::intval32bits($r << 24) | self::intval32bits($r << 16) | self::intval32bits($r << 8) | $r, $o = [], $s = 0; $s < $r; $s += 4) $o[] = $a;

		$l = [
		    'words' => $o,
		    'sigBytes' => $r
		];

		$e = self::concat($e, $l);

		return $e;
	}

	public static function unpad($e) {
	    $t = (255 & $e['words'][self::zerofill($e['sigBytes'] - 1, 2)]);
	    $e['sigBytes'] -= $t;
	    return $e;
	}

	public static function concat($e1, $e2) {
	    $t = $e1['words'];
        $n = $e2['words'];
        $r = $e1['sigBytes'];
        $a = $e2['sigBytes'];

	    if ($r % 4)
	        for ($i = 0; $i < $a; $i++) {
	            $o = self::zerofill($n[self::zerofill($i,2)], 24 - $i % 4 * 8) & 255;

	            if (!isset($t[self::zerofill($r + $i,2)])) {
	            	$t[self::zerofill($r + $i,2)] = null;
	            }
	            $t[self::zerofill($r + $i,2)] |= self::intval32bits($o << 24 - ($r + $i) % 4 * 8);
	        } else
	            for ($i = 0; $i < $a; $i += 4) $t[self::zerofill($r + $i,2)] = $n[self::zerofill($i,2)];

	    $e1['sigBytes'] += $a;
	    $e1['words'] = $t;
	    return $e1;
	}

	public static function doAES($str) {
		self::$_key = env('KEY_ZALO', '');
		$parseKey = self::parseKey(self::$_key);
		self::setKeySchedule($parseKey);
		$data = static::doFinalize($str);

		$result = static::stringify($data);

		//set null
		self::$_prevBlock = null;
		self::$_iv = [0, 0, 0, 0];

		return $result;
	}

	public static function process($n) {
	    $r = $n['words'];
        $a = $n['sigBytes'];
        $i = 4; //blockSize
        $s = ceil($a / (4 * $i)) * $i;
        $l = $s;
        $u = min(4 * $l, $a);
        
	    if ($l) {
	        for ($c = 0; $c < $l; $c += $i) {
	        	$r = static::processBlock($r, $c);
	        	// break;
	        }


	        $d = array_splice($r,0, $l);
	        $n['sigBytes'] -= $u;
	    }

	    return [
	    	'words'	=> $d,
	    	'sigBytes'	=> $u
	    ];
	}

	abstract public static function processBlock($e, $t);

	public static function ncall($e, $n, $r) {
	    $a = self::$_iv;
	    if ($a) {
	        $i = $a;
	        self::$_iv = null;
	    } else $i = self::$_prevBlock;
	    for ($o = 0; $o < $r; $o++) {
	    	if (!isset($e[$n + $o])) {
	    		$e[$n + $o] = null;
	    	}
	    	$e[$n + $o] ^= $i[$o];
	    }
	    return $e;
	}

	abstract public static function doCryptBlock($e, $t);

	abstract public static function stringify($e);

	public static function intval32bits($value)
	{
	    $value = ($value & 0xFFFFFFFF);

	    if ($value & 0x80000000)
	        $value = -((~$value & 0xFFFFFFFF) + 1);

	    return $value;
	}

	public static function zerofill($a,$b) { 
	    if($a>=0) return $a>>$b;
	    if($b==0) return (($a>>1)&0x7fffffff)*2+(($a>>$b)&1);
	    return ((~$a)>>$b)^(0x7fffffff>>($b-1)); 
	}

}

?>